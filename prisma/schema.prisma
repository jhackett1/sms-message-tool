datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

enum Direction {
  INBOUND
  OUTBOUND
}

model Team {
  id                  Int      @id @default(autoincrement())
  outOfHoursAutoreply Boolean  @default(false)
  outOfHoursMessage   String?  @default("We're out of the office right now. We'll reply as soon as we can during our normal hours - 9am to 5pm weekdays.")
  messageTemplates    String[]
}

model Message {
  id          Int       @id @default(autoincrement())
  body        String
  direction   Direction
  contact     Contact?  @relation(fields: [contactId], references: [id])
  contactId   Int?
  user        User?     @relation(fields: [userId], references: [id])
  userId      Int?
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  completedAt DateTime?
  status      String?
}

model Contact {
  id           Int       @id @default(autoincrement())
  number       String    @unique
  nickname     String?
  messages     Message[]
  createdAt    DateTime  @default(now()) @map(name: "created_at")
  updatedAt    DateTime  @updatedAt @map(name: "updated_at")
  socialCareId String?
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  messages      Message[]
  useSignature  Boolean   @default(false)
  signature     String?

  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}
